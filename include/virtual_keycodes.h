#pragma once
#include <string>

// Escape Sequence
#define ESC L"\x1b"
// Control Sequence Introducer ( ESC + [ )
#define CSI L"\x1b["
// End Line Sequence
#define ELS L"\r\n"

#define VK_COMMAND const std::wstring

namespace VIRTUAL_KEYCODES {

	namespace CURSOR {
		VK_COMMAND SAVE_POS = L"s";
		VK_COMMAND LOAD_POS = L"u";
		VK_COMMAND VISIBILITY_OFF = L"?25l";
		VK_COMMAND VISIBILITY_ON = L"?25h";
	}

	namespace SCREEN {
		VK_COMMAND CLEAR_SCREEN = L"2J";
	}

	namespace SGR {

		VK_COMMAND END = L"m";

		VK_COMMAND DEFAULT = L"0";
		VK_COMMAND BOLD = L"1";
		VK_COMMAND NO_BOLD = L"0";
		VK_COMMAND UNDERLINE = L"4";
		VK_COMMAND NO_UNDERLINE = L"24";
		VK_COMMAND NEGATIVE = L"7";
		VK_COMMAND POSITIVE = L"27";

		namespace FOREGROUND {
			VK_COMMAND DEFAULT = L"39";

			VK_COMMAND BLACK = L"30";
			VK_COMMAND RED = L"31";
			VK_COMMAND GREEN = L"32";
			VK_COMMAND YELLOW = L"33";
			VK_COMMAND BLUE = L"34";
			VK_COMMAND MAGENTA = L"35";
			VK_COMMAND CYAN = L"36";
			VK_COMMAND WHITE = L"37";

			VK_COMMAND BRIGHT_BLACK = L"90";
			VK_COMMAND BRIGHT_RED = L"91";
			VK_COMMAND BRIGHT_GREEN = L"92";
			VK_COMMAND BRIGHT_YELLOW = L"93";
			VK_COMMAND BRIGHT_BLUE = L"94";
			VK_COMMAND BRIGHT_MAGENTA = L"95";
			VK_COMMAND BRIGHT_CYAN = L"96";
			VK_COMMAND BRIGHT_WHITE = L"97";
		}

		namespace BACKGROUND {
			VK_COMMAND DEFAULT = L"49";
			VK_COMMAND BLACK = L"40";
			VK_COMMAND RED = L"41";
			VK_COMMAND GREEN = L"42";
			VK_COMMAND YELLOW = L"43";
			VK_COMMAND BLUE = L"44";
			VK_COMMAND MAGENTA = L"45";
			VK_COMMAND CYAN = L"46";
			VK_COMMAND WHITE = L"47";

			VK_COMMAND BRIGHT_BLACK = L"100";
			VK_COMMAND BRIGHT_RED = L"101";
			VK_COMMAND BRIGHT_GREEN = L"102";
			VK_COMMAND BRIGHT_YELLOW = L"103";
			VK_COMMAND BRIGHT_BLUE = L"104";
			VK_COMMAND BRIGHT_MAGENTA = L"105";
			VK_COMMAND BRIGHT_CYAN = L"106";
			VK_COMMAND BRIGHT_WHITE = L"107";
		}
	}
}
